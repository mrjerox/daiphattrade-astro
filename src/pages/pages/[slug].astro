---
export const prerender = true;
import Layout from "@layouts/Layout.astro";
import CardCategory from "@components/products/CardCategory.astro";
import { wpQuery } from "@apis/graphqlClient";
import {
  GET_PAGE_QUERY,
  GET_PAGES_QUERY,
  GET_PRODUCT_BRANDS_QUERY,
  GET_PRODUCT_CATEGORIES_QUERY,
} from "@apis/queries";
import { API_SECRET_TOKEN } from "astro:env/server";
import { PageIdType, MEDIA_HOST } from "@configs/constant.conf";
import Categories from "@components/pages/Categories.astro";
import { Debug } from "astro:components";

// const { slug } = Astro.params;

export const getStaticPaths = async () => {
  const { pages } = await wpQuery({
    query: GET_PAGES_QUERY,
    token: API_SECRET_TOKEN,
    variables: {
      where: {},
    },
  });

  const pagesData = pages?.nodes || [];
  // const pages = [
  //   {
  //     slug: "categories",
  //     title: "Astro Store",
  //     text: "Welcome to the Astro store!",
  //   },
  // ];
  //
  const { productCategories } = await wpQuery({
    query: GET_PRODUCT_CATEGORIES_QUERY,
    token: API_SECRET_TOKEN,
    variables: {
      where: {},
    },
  });

  return pagesData.map((page: any) => {
    return {
      params: { slug: page?.slug },
      props: {
        title: page?.title,
        content: page?.content,
        featuredImage: page?.featuredImage?.node?.filePath
          ? MEDIA_HOST + page?.featuredImage?.node?.filePath
          : "",
        pageId: page?.id,
        uri: page?.uri,
        slug: page?.slug,
        date: page?.date,
        status: page?.status,
        template: page?.template?.templateName,
        productCategories: productCategories?.nodes || [],
      },
    };
  });
};

// const { productCategories } = await wpQuery({
//   query: GET_PRODUCT_CATEGORIES_QUERY,
//   token: API_SECRET_TOKEN,
//   variables: {
//     where: {},
//   },
// });

const {
  title,
  content,
  featuredImage,
  pageId,
  uri,
  slug,
  date,
  status,
  template,
  productCategories,
} = Astro.props;
---

<Debug data={{ title, content, template }} />
<Layout title={title || ""}>
  {
    template === "Categories" && (
      <Categories
        page={{ title, content }}
        productCategories={productCategories}
      />
    )
  }
</Layout>
